$date
	Fri Mar 24 00:00:45 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! reset_i $end
$var wire 1 " enable_i $end
$var wire 8 # data_i [7:0] $end
$var wire 1 $ clk_i $end
$scope module Clock $end
$var reg 1 $ clk_o $end
$upscope $end
$scope module Top $end
$var wire 3 % button_async_unsafe_i [3:1] $end
$var wire 1 $ clk_12mhz_i $end
$var wire 8 & data_i [7:0] $end
$var wire 8 ' data_o [7:0] $end
$var wire 6 ( pmod_1b [7:2] $end
$var wire 1 ) reset_n_async_unsafe_i $end
$var wire 1 * signal_reset $end
$var wire 1 + valid_i $end
$var wire 1 , reset_sync_r $end
$var wire 1 - reset_r $end
$var wire 1 ! reset_o $end
$var wire 1 . reset_n_sync_r $end
$var wire 1 " enable_o $end
$var wire 8 / data [7:0] $end
$var wire 1 0 button_reset $end
$scope module inv $end
$var wire 1 , b_o $end
$var wire 1 . a_i $end
$upscope $end
$scope module lcd_ctrl $end
$var wire 1 1 button_next_i $end
$var wire 1 2 button_ok_i $end
$var wire 1 3 button_prev_i $end
$var wire 1 $ fpga_clk_i $end
$var wire 1 * fpga_reset_i $end
$var wire 8 4 lcd_data_o [7:0] $end
$var wire 1 " lcd_enable_o $end
$var wire 1 ! lcd_reset_o $end
$var wire 1 + valid_o $end
$var reg 8 5 lcd_data [7:0] $end
$var reg 1 6 lcd_enable $end
$var reg 1 7 lcd_reset $end
$var integer 32 8 State [31:0] $end
$upscope $end
$scope module sync_a $end
$var wire 1 $ clk_i $end
$var wire 1 ) d_i $end
$var wire 1 9 reset_i $end
$var wire 1 . q_o $end
$var reg 1 . q_r $end
$upscope $end
$scope module sync_b $end
$var wire 1 $ clk_i $end
$var wire 1 , d_i $end
$var wire 1 : reset_i $end
$var wire 1 - q_o $end
$var reg 1 - q_r $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0:
09
b0 8
x7
x6
bx 5
bx 4
03
02
01
00
bx /
x.
x-
x,
z+
x*
1)
b0 (
bz '
bz &
b1 %
0$
bz #
x"
x!
$end
